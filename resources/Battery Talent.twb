<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (Battery Talent)' inline='true' name='federated.1hw9ujl0insikq1famsp402ocqm8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Battery Talent' name='excel-direct.1fayyj00ao9kgk19vs80g1ygf57u'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/ljing/OneDrive - Tesla/Documents/23 Personal/5 Personal Projects/Battery Talent/Battery Talent.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1fayyj00ao9kgk19vs80g1ygf57u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E77:no:A1:E77:1' header='no' lost='0' outcome='1' processed='150'>
            <column datatype='string' name='Position' ordinal='0' />
            <column datatype='string' name='Degree' ordinal='1' />
            <column datatype='string' name='Years of Experience' ordinal='2' />
            <column datatype='integer' name='Salary' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1fayyj00ao9kgk19vs80g1ygf57u' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E77:no:A1:E77:1' header='no' lost='0' outcome='1' processed='150'>
            <column datatype='string' name='Position' ordinal='0' />
            <column datatype='string' name='Degree' ordinal='1' />
            <column datatype='string' name='Years of Experience' ordinal='2' />
            <column datatype='integer' name='Salary' ordinal='3' />
            <column datatype='integer' name='Year' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E77:no:A1:E77:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>150</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Position</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Position]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Position</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_430A924F6F2C4076A759E256F7650995]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Degree</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Degree]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Degree</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_430A924F6F2C4076A759E256F7650995]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Years of Experience</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Years of Experience]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Years of Experience</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_430A924F6F2C4076A759E256F7650995]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Salary]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Salary</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_430A924F6F2C4076A759E256F7650995]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_430A924F6F2C4076A759E256F7650995]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_430A924F6F2C4076A759E256F7650995]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_430A924F6F2C4076A759E256F7650995'>
            <properties context=''>
              <relation connection='excel-direct.1fayyj00ao9kgk19vs80g1ygf57u' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E77:no:A1:E77:1' header='no' lost='0' outcome='1' processed='150'>
                  <column datatype='string' name='Position' ordinal='0' />
                  <column datatype='string' name='Degree' ordinal='1' />
                  <column datatype='string' name='Years of Experience' ordinal='2' />
                  <column datatype='integer' name='Salary' ordinal='3' />
                  <column datatype='integer' name='Year' ordinal='4' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet2 (Battery Talent)' inline='true' name='federated.11jk0ag1ncfebk12j0sfe01c8b7v' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Battery Talent' name='excel-direct.1hdvqfj0a64coe19j3duj0irb96f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/ljing/OneDrive - Tesla/Documents/23 Personal/5 Personal Projects/Battery Talent/Battery Talent.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hdvqfj0a64coe19j3duj0irb96f' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:D61:no:A1:D61:0' header='yes' outcome='2'>
            <column datatype='string' name='Company Type' ordinal='0' />
            <column datatype='string' name='Stat' ordinal='1' />
            <column datatype='string' name='Level' ordinal='2' />
            <column datatype='integer' name='Salary' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hdvqfj0a64coe19j3duj0irb96f' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:D61:no:A1:D61:0' header='yes' outcome='2'>
            <column datatype='string' name='Company Type' ordinal='0' />
            <column datatype='string' name='Stat' ordinal='1' />
            <column datatype='string' name='Level' ordinal='2' />
            <column datatype='integer' name='Salary' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D61:no:A1:D61:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company Type</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Company Type]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Company Type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_C1A46A3B868743DC8EC367C57A61E34A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Stat</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Stat]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Stat</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_C1A46A3B868743DC8EC367C57A61E34A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Level</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Level]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Level</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_C1A46A3B868743DC8EC367C57A61E34A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Salary</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Salary]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>Salary</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_C1A46A3B868743DC8EC367C57A61E34A]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_C1A46A3B868743DC8EC367C57A61E34A]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet2' id='Sheet2_C1A46A3B868743DC8EC367C57A61E34A'>
            <properties context=''>
              <relation connection='excel-direct.1hdvqfj0a64coe19j3duj0irb96f' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A1:D61:no:A1:D61:0' header='yes' outcome='2'>
                  <column datatype='string' name='Company Type' ordinal='0' />
                  <column datatype='string' name='Stat' ordinal='1' />
                  <column datatype='string' name='Level' ordinal='2' />
                  <column datatype='integer' name='Salary' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='h1b_output_2022_category_v1' inline='true' name='federated.18ryr8l06np8xe1d8k7b612n5myd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='h1b_output_2022_category_v1' name='textscan.1e7c6oo0ann0ly1f787vr025fo67'>
            <connection class='textscan' directory='C:/Users/ljing/OneDrive - Tesla/Documents/23 Personal/5 Personal Projects/Battery Talent' filename='h1b_output_2022_category_v1.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1e7c6oo0ann0ly1f787vr025fo67' name='h1b_output_2022_category_v1.csv' table='[h1b_output_2022_category_v1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='Unnamed: 0.1.1' ordinal='3' />
            <column datatype='string' name='company' ordinal='4' />
            <column datatype='string' name='title' ordinal='5' />
            <column datatype='real' name='salary' ordinal='6' />
            <column datatype='string' name='location' ordinal='7' />
            <column datatype='date' name='submit date' ordinal='8' />
            <column datatype='date' name='start date' ordinal='9' />
            <column datatype='integer' name='year' ordinal='10' />
            <column datatype='real' name='cpi_pct' ordinal='11' />
            <column datatype='real' name='salary_normalized' ordinal='12' />
            <column datatype='string' name='level' ordinal='13' />
            <column datatype='string' name='category' ordinal='14' />
            <column datatype='string' name='relevance' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1e7c6oo0ann0ly1f787vr025fo67' name='h1b_output_2022_category_v1.csv' table='[h1b_output_2022_category_v1#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='integer' name='Unnamed: 0' ordinal='1' />
            <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
            <column datatype='integer' name='Unnamed: 0.1.1' ordinal='3' />
            <column datatype='string' name='company' ordinal='4' />
            <column datatype='string' name='title' ordinal='5' />
            <column datatype='real' name='salary' ordinal='6' />
            <column datatype='string' name='location' ordinal='7' />
            <column datatype='date' name='submit date' ordinal='8' />
            <column datatype='date' name='start date' ordinal='9' />
            <column datatype='integer' name='year' ordinal='10' />
            <column datatype='real' name='cpi_pct' ordinal='11' />
            <column datatype='real' name='salary_normalized' ordinal='12' />
            <column datatype='string' name='level' ordinal='13' />
            <column datatype='string' name='category' ordinal='14' />
            <column datatype='string' name='relevance' ordinal='15' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>Unnamed: 0</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>Unnamed: 0.1</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unnamed: 0.1.1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Unnamed: 0.1.1]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>Unnamed: 0.1.1</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>title</remote-name>
            <remote-type>129</remote-type>
            <local-name>[title]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>title</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salary]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>salary</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>129</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>submit date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[submit date]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>submit date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[start date]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>start date</remote-alias>
            <ordinal>9</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cpi_pct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cpi_pct]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>cpi_pct</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>salary_normalized</remote-name>
            <remote-type>5</remote-type>
            <local-name>[salary_normalized]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>salary_normalized</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>level</remote-name>
            <remote-type>129</remote-type>
            <local-name>[level]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>level</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[category]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>relevance</remote-name>
            <remote-type>129</remote-type>
            <local-name>[relevance]</local-name>
            <parent-name>[h1b_output_2022_category_v1.csv]</parent-name>
            <remote-alias>relevance</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]&quot;' value='Median Salary Adjusted for Inflation' />
        </aliases>
      </column>
      <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='tableau' formula='right([location],2)' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='h1b_output_2022_category_v1.csv' datatype='table' name='[__tableau_internal_object_id__].[h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E]' role='measure' type='quantitative' />
      <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Cpi Pct' datatype='real' name='[cpi_pct]' role='measure' type='quantitative' />
      <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
      <column caption='Salary' datatype='real' name='[salary]' role='measure' type='quantitative' />
      <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
      <column caption='Start Date' datatype='date' name='[start date]' role='dimension' type='ordinal' />
      <column caption='Submit Date' datatype='date' name='[submit date]' role='dimension' type='ordinal' />
      <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
      <column-instance column='[salary_normalized]' derivation='Count' name='[cnt:salary_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary]' derivation='Median' name='[med:salary:qk]' pivot='key' type='quantitative' />
      <column-instance column='[salary_normalized]' derivation='Median' name='[med:salary_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
      <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
      <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
      <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
      <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
      <column-instance column='[salary_normalized]' derivation='None' name='[none:salary_normalized:qk]' pivot='key' type='quantitative' />
      <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
      <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Company,Level,Salary Normalized,Title,Year)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:company:nk]' />
          <groupfilter function='level-members' level='[none:level:nk]' />
          <groupfilter function='level-members' level='[none:salary_normalized:qk]' />
          <groupfilter function='level-members' level='[none:title:nk]' />
          <groupfilter function='level-members' level='[none:year:ok]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:relevance:nk]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;Battery&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Company&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Relevant&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:level:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Junior&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Manager&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Staff&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;C-Suite&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Senior&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Director&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:category:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Incorrect Values&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;General&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vehicle&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Test/QA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mechanical&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Business&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Safety/Thermal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Battery General&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;PM&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Software&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Research&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Electrical&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:Calculation_35465903932788738:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_35465903584407552:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;ID&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AL&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;AR&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;OH&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;CT&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;WA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;KY&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;IL&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;DE&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;UT&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;NJ&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;OR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;AZ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;OK&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;MI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;VA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;LA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;NC&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;MA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;MO&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;NY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;IN&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;PA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;MD&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;NV&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;KS&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;CO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;VT&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='h1b_output_2022_category_v1.csv' id='h1b_output_2022_category_v1.csv_1D52DA4AE9EB48EA805D8934820BFE6E'>
            <properties context=''>
              <relation connection='textscan.1e7c6oo0ann0ly1f787vr025fo67' name='h1b_output_2022_category_v1.csv' table='[h1b_output_2022_category_v1#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='integer' name='Unnamed: 0' ordinal='1' />
                  <column datatype='integer' name='Unnamed: 0.1' ordinal='2' />
                  <column datatype='integer' name='Unnamed: 0.1.1' ordinal='3' />
                  <column datatype='string' name='company' ordinal='4' />
                  <column datatype='string' name='title' ordinal='5' />
                  <column datatype='real' name='salary' ordinal='6' />
                  <column datatype='string' name='location' ordinal='7' />
                  <column datatype='date' name='submit date' ordinal='8' />
                  <column datatype='date' name='start date' ordinal='9' />
                  <column datatype='integer' name='year' ordinal='10' />
                  <column datatype='real' name='cpi_pct' ordinal='11' />
                  <column datatype='real' name='salary_normalized' ordinal='12' />
                  <column datatype='string' name='level' ordinal='13' />
                  <column datatype='string' name='category' ordinal='14' />
                  <column datatype='string' name='relevance' ordinal='15' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='China Position v Company Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (Battery Talent)' name='federated.11jk0ag1ncfebk12j0sfe01c8b7v' />
          </datasources>
          <datasource-dependencies datasource='federated.11jk0ag1ncfebk12j0sfe01c8b7v'>
            <column datatype='string' name='[Company Type]' role='dimension' type='nominal' />
            <column datatype='string' name='[Level]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
            <column-instance column='[Company Type]' derivation='None' name='[none:Company Type:nk]' pivot='key' type='nominal' />
            <column-instance column='[Level]' derivation='None' name='[none:Level:nk]' pivot='key' type='nominal' />
            <column-instance column='[Salary]' derivation='None' name='[none:Salary:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;Executive&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Company Type:nk]' value='76' />
            <format attr='title' class='0' field='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Salary:qk]' scope='rows' value='Salary (RMB)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Company Type:nk]' value='102' />
            <format attr='width' field='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Level:nk]' value='69' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Level:nk]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_purple' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <reference-line axis-column='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Salary:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Salary:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Salary:qk]</rows>
        <cols>([federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Company Type:nk] / [federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Level:nk])</cols>
      </table>
      <simple-id uuid='{11F67629-0BEF-4B0A-8C69-CA3B7DE5C928}' />
    </worksheet>
    <worksheet name='China Position v Years of Experience'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (Battery Talent)' name='federated.1hw9ujl0insikq1famsp402ocqm8' />
          </datasources>
          <datasource-dependencies datasource='federated.1hw9ujl0insikq1famsp402ocqm8'>
            <column datatype='string' name='[Degree]' role='dimension' type='nominal' />
            <column datatype='string' name='[Position]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Salary]' role='measure' type='quantitative' />
            <column datatype='string' name='[Years of Experience]' role='dimension' type='nominal' />
            <column-instance column='[Degree]' derivation='None' name='[none:Degree:nk]' pivot='key' type='nominal' />
            <column-instance column='[Position]' derivation='None' name='[none:Position:nk]' pivot='key' type='nominal' />
            <column-instance column='[Salary]' derivation='None' name='[none:Salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Years of Experience]' derivation='None' name='[none:Years of Experience:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Position:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;General Manager&quot;</bucket>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;Executive&quot;</bucket>
            </dictionary>
          </manual-sort>
          <manual-sort column='[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Years of Experience:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;&lt;2 yr&quot;</bucket>
              <bucket>&quot;2-5yr&quot;</bucket>
              <bucket>&quot;5-8yr&quot;</bucket>
              <bucket>&quot;8-10yr&quot;</bucket>
              <bucket>&quot;10+ yr&quot;</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Salary:qk]' scope='rows' value='Salary (RMB)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Years of Experience:nk]' value='65' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Degree:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Salary:qk]</rows>
        <cols>([federated.1hw9ujl0insikq1famsp402ocqm8].[none:Position:nk] / [federated.1hw9ujl0insikq1famsp402ocqm8].[none:Years of Experience:nk])</cols>
      </table>
      <simple-id uuid='{0F97B639-10EB-4600-A96B-C7E316B087E4}' />
    </worksheet>
    <worksheet name='List By State'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='right([location],2)' />
            </column>
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='None' name='[none:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:level:nk]' member='&quot;Manager&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <tooltip column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[attr:title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk] / ([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk] / [federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]))</rows>
        <cols>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]</cols>
      </table>
      <simple-id uuid='{DF8CBF84-1DD1-4904-90BE-8DD56113C38C}' />
    </worksheet>
    <worksheet name='List By State (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='right([location],2)' />
            </column>
            <column-instance column='[title]' derivation='Attribute' name='[attr:title:nk]' pivot='key' type='nominal' />
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='Count' name='[cnt:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;AL&quot;</bucket>
              <bucket>&quot;AZ&quot;</bucket>
              <bucket>&quot;CO&quot;</bucket>
              <bucket>&quot;DE&quot;</bucket>
              <bucket>&quot;FL&quot;</bucket>
              <bucket>&quot;GA&quot;</bucket>
              <bucket>&quot;IL&quot;</bucket>
              <bucket>&quot;IN&quot;</bucket>
              <bucket>&quot;KY&quot;</bucket>
              <bucket>&quot;MA&quot;</bucket>
              <bucket>&quot;MD&quot;</bucket>
              <bucket>&quot;NC&quot;</bucket>
              <bucket>&quot;NJ&quot;</bucket>
              <bucket>&quot;NV&quot;</bucket>
              <bucket>&quot;NY&quot;</bucket>
              <bucket>&quot;OH&quot;</bucket>
              <bucket>&quot;OR&quot;</bucket>
              <bucket>&quot;PA&quot;</bucket>
              <bucket>&quot;TN&quot;</bucket>
              <bucket>&quot;TX&quot;</bucket>
              <bucket>&quot;VA&quot;</bucket>
              <bucket>&quot;VT&quot;</bucket>
              <bucket>&quot;WA&quot;</bucket>
              <bucket>&quot;WI&quot;</bucket>
              <bucket>&quot;MI&quot;</bucket>
              <bucket>&quot;CA&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:level:nk]' member='&quot;Manager&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' />
              <tooltip column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[attr:title:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</rows>
        <cols>[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]</cols>
      </table>
      <simple-id uuid='{A7133549-FF79-4B20-BE2B-E16D74356A6F}' />
    </worksheet>
    <worksheet name='Map View'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='right([location],2)' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='Count' name='[cnt:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' filter-group='5'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' filter-group='3'>
            <groupfilter function='member' level='[none:level:nk]' member='&quot;Manager&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' filter-group='4'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[Longitude (generated)]' field-type='quantitative' max='-7063477.0496200928' min='-14564193.951451845' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[Latitude (generated)]' field-type='quantitative' max='6421541.3546339739' min='2504701.9478171598' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]' />
              <text column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]' />
              <lod column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]' />
              <geometry column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18ryr8l06np8xe1d8k7b612n5myd].[Latitude (generated)]</rows>
        <cols>[federated.18ryr8l06np8xe1d8k7b612n5myd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{2028F71E-F775-4390-B53E-3484A779038B}' />
    </worksheet>
    <worksheet name='Salary Count Category'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='Count' name='[cnt:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;General&quot;</bucket>
              <bucket>&quot;Battery General&quot;</bucket>
              <bucket>&quot;Business&quot;</bucket>
              <bucket>&quot;PM&quot;</bucket>
              <bucket>&quot;Electrical&quot;</bucket>
              <bucket>&quot;Manufacturing&quot;</bucket>
              <bucket>&quot;Mechanical&quot;</bucket>
              <bucket>&quot;Research&quot;</bucket>
              <bucket>&quot;Safety/Thermal&quot;</bucket>
              <bucket>&quot;Software&quot;</bucket>
              <bucket>&quot;Test/QA&quot;</bucket>
              <bucket>&quot;Vehicle&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015' />
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='32' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#606b76' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_purple' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3403314352035522' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]</rows>
        <cols>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</cols>
      </table>
      <simple-id uuid='{A80DB893-F6B2-4764-B7E9-689778BA8790}' />
    </worksheet>
    <worksheet name='Salary Count Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='Count' name='[cnt:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;C-Suite&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Staff&quot;</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Junior&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='26' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='0' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#606b76' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_purple' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3403314352035522' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</rows>
        <cols>[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]</cols>
      </table>
      <simple-id uuid='{E0FF4815-148E-4EE6-A84E-B9CBDD988134}' />
    </worksheet>
    <worksheet name='Salary by Level'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='right([location],2)' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[salary]' derivation='Median' name='[med:salary:qk]' pivot='key' type='quantitative' />
            <column-instance column='[salary_normalized]' derivation='Median' name='[med:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary' datatype='real' name='[salary]' role='measure' type='quantitative' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]'>
            <groupfilter function='level-members' level='[none:Calculation_35465903584407552:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Junior&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Staff&quot;</bucket>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;C-Suite&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015' />
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]' value='87' />
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]' value='87' />
            <format attr='title' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]' scope='rows' value='Median Salary ($)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk] + [federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk])</rows>
        <cols>([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk] / [federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>100942.0</value>
                <value>&quot;Junior&quot;</value>
                <value>2021</value>
                <value>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-19' y='47' />
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>140000.0</value>
                <value>&quot;Senior&quot;</value>
                <value>2021</value>
                <value>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-16' y='34' />
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>175000.0</value>
                <value>&quot;Staff&quot;</value>
                <value>2021</value>
                <value>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-16' y='38' />
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>133566.0</value>
                <value>&quot;Manager&quot;</value>
                <value>2021</value>
                <value>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-16' y='45' />
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>195000.0</value>
                <value>&quot;Director&quot;</value>
                <value>2021</value>
                <value>&quot;[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary:qk]&quot;</value>
              </tuple>
            </tuple-reference>
            <label-position x='-18' y='67' />
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{A0CAD250-29A7-4B9F-9003-2A34F5BED46D}' />
    </worksheet>
    <worksheet name='Salary by Level (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='right([location],2)' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[company]' derivation='None' name='[none:company:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='None' name='[none:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[Exclusions (Company,Level,Salary Normalized,Title,Year)]' />
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]'>
            <groupfilter function='level-members' level='[none:level:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Junior&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Staff&quot;</bucket>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;C-Suite&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]'>
            <groupfilter function='member' level='[none:year:ok]' member='2021' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[Exclusions (Company,Level,Salary Normalized,Title,Year)]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='24' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#606b76' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_purple' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' />
              <lod column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.47176796197891235' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok] * [federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk])</rows>
        <cols>([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk] / [federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk])</cols>
      </table>
      <simple-id uuid='{66229152-BE54-46E3-899A-3D2E7D1DF666}' />
    </worksheet>
    <worksheet name='Salary by Level (Battery)'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='None' name='[none:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[title]' derivation='None' name='[none:title:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Title' datatype='string' name='[title]' role='dimension' type='nominal' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]'>
            <groupfilter function='level-members' level='[none:category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Junior&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Staff&quot;</bucket>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;C-Suite&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]'>
            <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]' scope='rows' value='Salary ($)' />
            <format attr='auto-subtitle' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]' scope='rows' value='false' />
            <format attr='subtitle' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]' scope='rows' value='Adjusted for Inflation to 2021 CPI' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='39' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='solid' />
            <format attr='stroke-size' id='refline0' value='3' />
            <format attr='stroke-color' id='refline0' value='#606b76' />
          </style-rule>
          <style-rule element='refboxplot'>
            <format attr='palette' id='refline0' value='bp_purple' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' />
              <lod column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]' />
            </encodings>
            <reference-line axis-column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='none' probability='95' scope='per-cell' symmetric='false' value-column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]</rows>
        <cols>([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk] / [federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok])</cols>
      </table>
      <simple-id uuid='{130F2061-F45B-468D-A7F7-0275F50DE0EC}' />
    </worksheet>
    <worksheet name='Salary by Level and State'>
      <table>
        <view>
          <datasources>
            <datasource caption='h1b_output_2022_category_v1' name='federated.18ryr8l06np8xe1d8k7b612n5myd' />
          </datasources>
          <datasource-dependencies datasource='federated.18ryr8l06np8xe1d8k7b612n5myd'>
            <column caption='State' datatype='string' name='[Calculation_35465903584407552]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='tableau' formula='right([location],2)' />
            </column>
            <column caption='Category' datatype='string' name='[category]' role='dimension' type='nominal' />
            <column caption='Level' datatype='string' name='[level]' role='dimension' type='nominal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[salary_normalized]' derivation='Median' name='[med:salary_normalized:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_35465903584407552]' derivation='None' name='[none:Calculation_35465903584407552:nk]' pivot='key' type='nominal' />
            <column-instance column='[category]' derivation='None' name='[none:category:nk]' pivot='key' type='nominal' />
            <column-instance column='[level]' derivation='None' name='[none:level:nk]' pivot='key' type='nominal' />
            <column-instance column='[relevance]' derivation='None' name='[none:relevance:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:ok]' pivot='key' type='ordinal' />
            <column caption='Relevance' datatype='string' name='[relevance]' role='dimension' type='nominal' />
            <column caption='Salary Normalized' datatype='real' name='[salary_normalized]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_35465903584407552:nk]' member='&quot;CA&quot;' />
              <groupfilter function='member' level='[none:Calculation_35465903584407552:nk]' member='&quot;MI&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter from='&quot;Battery General&quot;' function='range' level='[none:category:nk]' to='&quot;General&quot;' />
              <groupfilter from='&quot;Manufacturing&quot;' function='range' level='[none:category:nk]' to='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]'>
            <groupfilter from='&quot;Junior&quot;' function='range' level='[none:level:nk]' to='&quot;Staff&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <manual-sort column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Junior&quot;</bucket>
              <bucket>%null%</bucket>
              <bucket>&quot;Senior&quot;</bucket>
              <bucket>&quot;Staff&quot;</bucket>
              <bucket>&quot;Manager&quot;</bucket>
              <bucket>&quot;Director&quot;</bucket>
              <bucket>&quot;C-Suite&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Battery&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Relevant&quot;' />
              <groupfilter function='member' level='[none:relevance:nk]' member='&quot;Vehicle&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:year:ok]' member='2015' />
              <groupfilter function='member' level='[none:year:ok]' member='2016' />
              <groupfilter function='member' level='[none:year:ok]' member='2017' />
              <groupfilter function='member' level='[none:year:ok]' member='2018' />
              <groupfilter function='member' level='[none:year:ok]' member='2019' />
              <groupfilter function='member' level='[none:year:ok]' member='2020' />
              <groupfilter function='member' level='[none:year:ok]' member='2021' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</column>
            <column>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]' value='96' />
            <format attr='title' class='0' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]' scope='rows' value='Median Salary ($), Adjusted for Inflation' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='22' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' value='-90' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='11' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2853591442108154' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</rows>
        <cols>([federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk] / [federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>125000.0</value>
                <value>&quot;CA&quot;</value>
                <value>&quot;Junior&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>95000.0</value>
                <value>&quot;MI&quot;</value>
                <value>&quot;Junior&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
            <label-position x='-16' y='-27' />
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>155000.0</value>
                <value>&quot;CA&quot;</value>
                <value>&quot;Senior&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>111093.0</value>
                <value>&quot;MI&quot;</value>
                <value>&quot;Senior&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>123000.0</value>
                <value>&quot;MI&quot;</value>
                <value>&quot;Staff&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>190000.0</value>
                <value>&quot;CA&quot;</value>
                <value>&quot;Staff&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>179500.0</value>
                <value>&quot;CA&quot;</value>
                <value>&quot;Manager&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
            <label-position x='-17' y='-22' />
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
                  <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>123968.0</value>
                <value>&quot;MI&quot;</value>
                <value>&quot;Manager&quot;</value>
                <value>2021</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{4425903D-7C62-403E-8737-9DD2C6D5B5EC}' />
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='China Position v Years of Experience'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='36'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Degree:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Degree:nk]</field>
            <field>[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Position:nk]</field>
            <field>[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Salary:qk]</field>
            <field>[federated.1hw9ujl0insikq1famsp402ocqm8].[none:Years of Experience:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3B8420A0-00FA-4A40-AFE4-92BA0DD14DCC}' />
    </window>
    <window class='worksheet' name='China Position v Company Type'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Company Type:nk]</field>
            <field>[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Level:nk]</field>
            <field>[federated.11jk0ag1ncfebk12j0sfe01c8b7v].[none:Stat:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8B89596F-F61E-48A3-B456-DEDC0E7B69F9}' />
    </window>
    <window class='worksheet' name='Salary by Level (Battery)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2D7E4E42-1662-40E0-9EB2-659E1A9804A8}' />
    </window>
    <window class='worksheet' name='Salary Count Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EAD3D53D-312C-409F-83E2-B2FFB37AB847}' />
    </window>
    <window class='worksheet' name='Salary Count Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C68D0581-7615-4502-8324-A63137E346B1}' />
    </window>
    <window class='worksheet' name='Map View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[cnt:salary_normalized:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[med:salary_normalized:qk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:location:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4AA3061C-4AF9-41D9-84F4-77C4D438E58D}' />
    </window>
    <window class='worksheet' name='List By State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9F7AE672-BF1C-4E1D-B095-D37890E70DB6}' />
    </window>
    <window class='worksheet' name='List By State (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='0' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:salary_normalized:qk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{410D2C71-BCC4-4CB5-9602-DCA33EAE8081}' />
    </window>
    <window class='worksheet' name='Salary by Level'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[:Measure Names]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CBBCD45-FFF0-464E-9090-C3C070BECD2A}' />
    </window>
    <window class='worksheet' maximized='true' name='Salary by Level and State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E7D39D93-B5CD-4670-B796-404E133BEB24}' />
    </window>
    <window class='worksheet' name='Salary by Level (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='filter' />
            <card param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:relevance:nk]' type='filter' />
            <card pane-specification-id='2' param='[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:Calculation_35465903584407552:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:battery:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:category:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:company:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:level:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:title:nk]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:ok]</field>
            <field>[federated.18ryr8l06np8xe1d8k7b612n5myd].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EFFAFA46-4966-4310-A087-6BACF286B9BB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='China Position v Company Type' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='China Position v Years of Experience' width='192'>
      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
      YZdJT+YAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='List By State' width='192'>
      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
      Dxlrc0j5KykFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='List By State (2)' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Map View' width='192'>
      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
      GSWiczjIgMqeAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Salary Count Category' width='192'>
      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
      omSccgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Salary Count Level' width='192'>
      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
      BOZLsCyP/fAAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Salary by Level' width='192'>
      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
      t9LW3T+eh9bQ+FSM29OgQih8sO931Ct5rE3zcbXfQOBsPXNSwvSEjZRdbSHJ38L87Y/w/jtH
      eO4rXx2vQ2tofGrGTQBd9RfwG1yYFejuGmDjY89z7OXf0dGvsr34c+x7512EiPLqr39F0erd
      pCVaR16pJ4RA+azl/ROYqe7f9WKYyejjuAng2tUrNDV04B2EtOUzaKy5RkSfwExrhMbGegym
      BHTqIE9//Vsc//0vaVqxgII0x8j2k7Ge9G6YDv5NRh/HtR4gFvJyobafxbOSOXKslNnLNzDD
      FuV4aSWL1mwi2FZD7rL1DLVW0RqysmZxETqm/vPyU92/yVwPoBXE3Aemun+TWQBaGlRjWqMJ
      QGNaowlAY1qjCUBjWqMJQGNaowlAY1qjCUBjWqMJQGNaowlAY1qjCUBjWqMJQGNaowlAY1oz
      bgKIRQKc/vAYzd39yEN9HDlymDPnrxLye/nw+HF6BoLUV11kSBa01F6irq13vA6tofGpGTcB
      DHS34Y9E2LfvEN2N1ZRWXEJSdZw8/A6BaJR97x7mclkptTUX2HfsIhmp7vE6tIbGp2bcCmLS
      8xeQ29tNk91OTG9h3drlnD99klSnyraNK2h95x2ECLP3jbcoWP4wDqsxbmmdWCw2Xk2ZcCiK
      MqX9k2V50vo4bgKo+nA/Vf1GhrzddLcP4VfTMJvMJNkF586VYbS60IX8fO3bf87RX/6QK60L
      WJjrxmAwTPklhAwGw5T2T1EUdDrdpPRx3ApiFCnExcqLpOTOJdtt5uy5i+TMXUKKVabyUg1F
      C5cS6GgiY/ZCot4WOgI6Fs7O1SrCpgCTuSBGqwi7D0x1/yazALQ0qMa0RhOAxrRGE4DGtEYT
      gMa0RhOAxrRGE4DGtEYTgMa0RhOAxrRGE4DGtEYTgMa0RhOAxrRGE4DGtGbcBBD2e9j35mtc
      rGsnPNjNW6+9ypWmbny9Lbzx+us0dPZx8fSH+GOCqvLjVDd1j9ehNTQ+NeP2AHc4GCAlPZXS
      k6fxu4dImbWCE4eOMiMpyozCxRw9cpRUyYtPlbjaFOTfLE8br0NraHxqxk0ACcmZuHu7QQ/+
      gMSCwgLqyyvwRxVWZudx8fJVhAhRVnYB18wFmAx6rSJsijCZK8LGrR7gWtkhPqztx+8Ps2W+
      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
      MmctYteWNRhu6KPqLpZy8lwNAkjLnfdRlmbU3lRdzvHyKlQByTOLeHTnFm6IoGi7dp6jpRdR
      hIozLZ/H9+zghgiKroZLHDpxDkWo2N3ZfO6xnVhuiPF7W67y3gdnkFUVW9JMnnhsF/YbDtDf
      Ucf+908iqypWZwaPPVpMotU4MhHm72ni7feOEVNULI5U9jy6myT7aIgT9Lby9jtHicoKZnsy
      xXv2kJo4GoOH+jvZ+877hCQFkzWRnXseJcM1GmOHfT3sP3CQQETGYLbzyO7HmekejbGjAS8H
      DrzLQCiGwWhlx+7HyUkdzeLEQgO8s/8dvMEoeoOJh4qfoCBjNMSTIwHe27ePnkAEvd7Ipkce
      ZXaWeyQNajPrOLj3bTp9YfR6I+u2FTM/L31ke6FEObT3TdoHQuj1BlZt3sniwhtekalKHDnw
      Ns2eAHqdgaUbtrNi7g1BkBrj+MH9NHQNgE7PojVbWbOw4Aa7zKkj73CtzQvombdyIxuWzr7B
      rlB+4iBVjd3ojVa2lzw+cUIgIVROnD7Hxm0Ps+uR7bRVlzF4Uxbo1Oly1mzezq6dO+itPUtf
      KN5+5kwZy9Y9RPHOh/E1nacnEJ/lKS8rY/6qTRTv2km4/RIdvvgsz9nyMxQt30Bx8S7U7mpa
      BuLtFypKyV20jpKSYkwDdTTclAW6dLaUGfNWU1JSQkK4jdouf5y9+twpUgpXUlJSglv1cKXV
      G2e/duEMCTlLKCkpYYY5wOXG7jh7Y3UFhrS5FJcUk+eMUXktPgvTdq2SmDOf4pJi5qYZqKhu
      jLN3NVwmYJ5JSUkJi3PsnL5QG2f3tlzBI9yUlJSwstDNqXPxWSJf5zXaIgmUlJSwem4mpWfj
      s0Sh3gbqfCaKS0pYtzCX0xXxWaDYQAvVvSq7iovZsLSI0+Xn4u2DHVxqj7BzVzGbVs2nrKwi
      zi4Huqls9vHwrmIeWreU8rIzcXZlyMvZOg87du5i++bVlJ8pjbdHBimrbmP7I7tYlpfI6QvX
      Jk4WyG6343YY+PBUGa3tXeTPX8nc/Bnob5icSUk0c/LUGVraOsiavYz5hVkYbrQ7bZSWnqap
      rYOMWYtZNCc33u5KoOz0aRpb20nJnc+yefkYbsjypCQncra0lPrmdlxZc1m5MD4LlOJO4tzp
      U9Q1tZKQPotVS2ZjuqGLSklxU3nmJHVNrViSc1m9bB4Wo37Ev5TUVC6Wfci1xlYMiZmsWb4Q
      6w1ZHndqKlfOllLT0IywprJ21RLs5tFBssudSt3FMq7WNSIZXKxfs4KEG+YZEpPcNFefo/pa
      AyGRwMb1q3BYR3uYBJebztoLXK6pJSBZ2LRxbVyWyOZMxtNYxaXqGvrDBjZvWh8332BxJDHY
      VsOFqqv0DQk2bFxPcqJtNAvkSmWoq47zl6vxBGTWbdhAyg1ZHr3VSczbxLmL1fT6Iqxdv4G0
      pNEeyGBJRPW1U1F5mZ7+IVav20CGe7QH0lsS0AW7KT93kS6vn5VrNzAj1TVqN9swRfs4c/YC
      nT39LF+zgaz0G7JERgs2JcCp8vP4JQMbN66bQD0AgmtXrhCVJLLnLifYWcXgTXf4uqtXCEcl
      ZhQuQfZew3vTHb6h9iqhqER67nwM/ka6BuPv4M11NQTDUZJnFpEQbaO1X4qztzVcwxeO4kzP
      J0V00eiJH+S1N9UxOBTBlpzNDMsgdV3xjzh0tdTTH4xgcWaS6wxT0zYQZ+9pa8DrD2NypFKU
      CtVN8Xl8b0cTPYNDGG1u5mdZuFjXGWfv726ls8+P3uxiaYGL81db4uw+TwdtvQNgSmDVvAzK
      L9fH2YP9XTR39aHqraxfksvpyqtx9vCgh4b2XmTMbF45m1M33eGlQB91zV1Iip5Nqxdw5tyl
      OLsSHqSmsYOYomf9qsVUnIvvAYQUoLqulZgCa1Yt49z58/H2WJDq2iZiimDFqpVcqDx3kz3E
      lWuNSLLKspWruVwZ30MIOcKVa/VIMYXFK9dx5UJ5vF2RuFJTSywms3hWKqcrr04cASAEXZ5B
      tuzcjdx2nrLq1o9lQbo8fazfvgtz/xVOXmhAucne0+tlxeaHcUWaOV5x9WNZjp5eD4vXb2em
      vpfDpy59zN7b28vclVsodPh599g5bk7ieHq6KVi6iSUZMvveLyOmiJvsXWQtXM/KXCN7D5Yi
      3bSDvp5OMuetYd3sRN5+9zhROV7g/b1dpBQuZ+PCNN7afxQpFi9wX183rpyFbF2ey1v7DhGV
      4u2B/l4SZsxhx9q5vPnWO0Rusg8NejGn5LFz8zLeeGMf4Wj8DSLs70PvnMnuHWt58/U3h7Mk
      NxAN9qPYUnm85CH2vv46vqH4LFEsNEjU4OSx3Ts4tPcN+gLxj7yrYR9Dws6ePTs5duAtem6a
      KFSiAQKyhd17dnHm0F46+uJvMKo0hE8yUrKnhMoP9tHiia8qVGMhBsJQ/Ohurnx4gPru+BBU
      yFH6gjI79+zhTNl5wtEY/z/QW32URxZ+oAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Salary by Level (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salary by Level (Battery)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Salary by Level and State' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
